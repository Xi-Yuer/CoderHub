syntax = "v1"

info(
    title: "User API"
    desc: "用户服务接口，提供用户注册、登录、信息管理等功能"
    author: "Xi-Yuer"
    version: "1.0.0"
)

type (
    UserResponse {
        Code int32 `json:"code"`        // 状态码
        Message string `json:"message"` // 提示信息
    }
    UserHealthResp {
        UserResponse
        Data bool `json:"data"` // 健康检查结果
    }
        // 用户信息
    UserInfo {
        UserId int64 `json:"user_id"`        // 用户ID
        Username string `json:"username"`    // 用户名
        Avatar string `json:"avatar"`        // 头像
        Email string `json:"email"`          // 邮箱
        Nickname string `json:"nickname"`    // 昵称
        IsAdmin bool `json:"is_admin"`       // 是否管理员
        Status bool `json:"status"`          // 状态
        CreatedAt int64 `json:"created_at"`  // 创建时间
        UpdatedAt int64 `json:"updated_at"`  // 更新时间
    }

        // 创建用户
    CreateUserRequest {
        Username string `form:"username"`         // 用户名
        PasswordHash string `form:"passwordHash"` // 密码哈希
    }
    CreateUserResponse {
        UserResponse
        Data int64 `json:"data"` // 用户ID
    }

        // 获取用户信息
    GetUserInfoRequest {
        UserId int64 `path:"userId"` // 用户ID
    }
    GetUserInfoResponse {
        UserResponse
        Data *UserInfo `json:"data"` // 用户信息
    }

        // 更新用户信息
    UpdateUserInfoRequest {
        Email string `form:"email"`       // 邮箱
        Nickname string `form:"nickname"` // 昵称
    }
    UpdateUserInfoResponse {
        UserResponse
        Data bool `json:"data"` // 是否更新成功
    }

        // 用户登录
    AuthenticateUserRequest {
        Username string `form:"username"` // 用户名
        Password string `form:"password"` // 密码
    }
    AuthenticateUserResponse {
        UserResponse
        Data string `json:"data"` // JWT Token
    }

        // 修改密码
    ChangePasswordRequest {
        OldPassword string `form:"oldPassword"` // 旧密码
        NewPassword string `form:"newPassword"` // 新密码
    }
    ChangePasswordResponse {
        UserResponse
        Data bool `json:"data"` // 是否修改成功
    }

        // 重置密码
    ResetPasswordRequest {
        Email string `form:"email"`             // 邮箱
        NewPassword string `form:"newPassword"` // 新密码
    }
    ResetPasswordResponse {
        UserResponse
        Data bool `json:"data"` // 是否重置成功
    }

        // 删除用户
    DeleteUserRequest {
        UserId int64 `path:"userId"` // 用户ID
    }
    DeleteUserResponse {
        UserResponse
        Data bool `json:"data"` // 是否删除成功
    }

        // 上传用户头像
    UploadUserAvatarRequest {
        ImageId int64 `json:"image_id"` // 图片ID
    }
    UploadUserAvatarResponse {
        UserResponse
        Data *ImageInfoAvatar `json:"data"` // 头像信息
    }

        // 头像信息
    ImageInfoAvatar {
        ImageId int64 `json:"image_id"`             // 图片ID
        Url string `json:"url"`                     // 完整的访问URL
        ThumbnailUrl string `json:"thumbnail_url"`  // 缩略图URL
        CreatedAt string `json:"created_at"`        // 创建时间
    }

        // 通过链接重置密码
    ResetPasswordByLinkRequest {
        Email string `form:"email" validate:"required,email"`                                // 邮箱
        Password string `form:"password" validate:"required,min=8,max=32"`                   // 密码
        ConfirmPassword string `form:"confirmPassword" validate:"required,eqfield=Password"` // 确认密码
        Token string `form:"token" validate:"required"`                                      // 重置令牌
    }
    ResetPasswordByLinkResponse {
        UserResponse
        Data bool `json:"data"` // 是否重置成功
    }

        // 发送重置密码链接
    SendResetPasswordLinkRequest {
        Email string `form:"email"` // 邮箱
    }
    SendResetPasswordLinkResponse {
        UserResponse
        Data bool `json:"data"` // 是否发送成功
    }
)

// 公共路由
@server(
    prefix: /api/user
    group: user
)
service UserAPI {
    @doc(
        summary: "创建用户"
    )
    @handler CreateUser
    post /register (CreateUserRequest) returns (CreateUserResponse)

    @doc(
        summary: "获取用户信息"
    )
    @handler GetUserInfo
    get /info/:userId (GetUserInfoRequest) returns (GetUserInfoResponse)

    @doc(
        summary: "用户登录"
    )
    @handler AuthenticateUser
    post /login (AuthenticateUserRequest) returns (AuthenticateUserResponse)

    @doc(
        summary: "通过链接重置密码"
    )
    @handler ResetPasswordByLink
    post /reset-password-by-link (ResetPasswordByLinkRequest) returns (ResetPasswordByLinkResponse)

    @doc(
        summary: "发送重置密码链接"
    )
    @handler SendResetPasswordLink
    post /send-reset-password-link (SendResetPasswordLinkRequest) returns (SendResetPasswordLinkResponse)

    @doc(
        summary: "健康检查"
    )
    @handler HealthCheck
    get /health returns (UserHealthResp)
}

// 需要认证的路由
@server(
    jwt: Auth
    prefix: /api/user
    group: user
)
service UserAPI {
    @doc(
        summary: "更新用户信息"
    )
    @handler UpdateUserInfo
    put /update (UpdateUserInfoRequest) returns (UpdateUserInfoResponse)

    @doc(
        summary: "上传用户头像"
    )
    @handler UploadUserAvatar
    post /upload-avatar (UploadUserAvatarRequest) returns (UploadUserAvatarResponse)

    @doc(
        summary: "重置密码"
    )
    @handler ResetPassword
    post /reset-password (ResetPasswordRequest) returns (ResetPasswordResponse)

    @doc(
        summary: "修改密码"
    )
    @handler ChangePassword
    post /change-password (ChangePasswordRequest) returns (ChangePasswordResponse)

    @doc(
        summary: "删除用户"
    )
    @handler DeleteUser
    delete /delete/:userId (DeleteUserRequest) returns (DeleteUserResponse)
}
