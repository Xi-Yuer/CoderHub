// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	codehub "coderhub/api/coderhub/internal/handler/codehub"
	"coderhub/api/coderhub/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 新增学术导航
				Method:  http.MethodPost,
				Path:    "/academic_navigator/create",
				Handler: codehub.AddAcademicNavigatorHandler(serverCtx),
			},
			{
				// 删除学术导航
				Method:  http.MethodDelete,
				Path:    "/academic_navigator/delete/:id",
				Handler: codehub.DeleteAcademicNavigatorHandler(serverCtx),
			},
			{
				// 取消点赞学术导航
				Method:  http.MethodDelete,
				Path:    "/academic_navigator/dislike/:id",
				Handler: codehub.CancelLikeAcademicNavigatorHandler(serverCtx),
			},
			{
				// 获取学术导航
				Method:  http.MethodGet,
				Path:    "/academic_navigator/get",
				Handler: codehub.GetAcademicNavigatorHandler(serverCtx),
			},
			{
				// 健康检查
				Method:  http.MethodGet,
				Path:    "/academic_navigator/health",
				Handler: codehub.AcademicHealthHandler(serverCtx),
			},
			{
				// 点赞学术导航
				Method:  http.MethodPost,
				Path:    "/academic_navigator/like/:id",
				Handler: codehub.PostAcademicNavigatorLikeHandler(serverCtx),
			},
			{
				// 获取粉丝列表
				Method:  http.MethodGet,
				Path:    "/follow/fans",
				Handler: codehub.GetFansListHandler(serverCtx),
			},
			{
				// 关注用户
				Method:  http.MethodPost,
				Path:    "/follow/follow",
				Handler: codehub.FollowUserHandler(serverCtx),
			},
			{
				// 健康检查
				Method:  http.MethodGet,
				Path:    "/follow/health",
				Handler: codehub.FollowHealthHandler(serverCtx),
			},
			{
				// 获取关注列表
				Method:  http.MethodGet,
				Path:    "/follow/list",
				Handler: codehub.GetFollowListHandler(serverCtx),
			},
			{
				// 取消关注
				Method:  http.MethodPost,
				Path:    "/follow/unfollow",
				Handler: codehub.UnfollowUserHandler(serverCtx),
			},
			{
				// 删除图片
				Method:  http.MethodPost,
				Path:    "/image/delete",
				Handler: codehub.DeleteHandler(serverCtx),
			},
			{
				// 获取图片信息
				Method:  http.MethodGet,
				Path:    "/image/get/:image_id",
				Handler: codehub.GetHandler(serverCtx),
			},
			{
				// 健康检查
				Method:  http.MethodGet,
				Path:    "/image/health",
				Handler: codehub.ImageHealthHandler(serverCtx),
			},
			{
				// 获取用户图片列表
				Method:  http.MethodGet,
				Path:    "/image/list",
				Handler: codehub.ListByUserHandler(serverCtx),
			},
			{
				// 上传图片
				Method:  http.MethodPost,
				Path:    "/image/upload",
				Handler: codehub.UploadHandler(serverCtx),
			},
			{
				// 删除用户
				Method:  http.MethodDelete,
				Path:    "/user/delete/:id",
				Handler: codehub.DeleteUserHandler(serverCtx),
			},
			{
				// 健康检查
				Method:  http.MethodGet,
				Path:    "/user/health",
				Handler: codehub.UserHealthHandler(serverCtx),
			},
			{
				// 获取用户信息
				Method:  http.MethodGet,
				Path:    "/user/info/:id",
				Handler: codehub.GetUserInfoHandler(serverCtx),
			},
			{
				// 获取用户列表
				Method:  http.MethodGet,
				Path:    "/user/list",
				Handler: codehub.GetUserListHandler(serverCtx),
			},
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: codehub.LoginHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: codehub.RegisterHandler(serverCtx),
			},
			{
				// 更新用户信息
				Method:  http.MethodPut,
				Path:    "/user/update/:id",
				Handler: codehub.UpdateUserInfoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)
}
