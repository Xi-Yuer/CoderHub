    // goctl api go -api academic_navigator.api -dir ../
        // goctl api plugin -plugin goctl-swagger="swagger -filename academic_navigator.json" -api academic_navigator.api -dir .
    syntax = "v1"

    info(
        title: "Academic Navigator API"
        version: "1.0.0"
    )

    type (
        Response {
            Code int32 `json:"code"`        // 状态码
            Message string `json:"message"` // 提示信息
        }
        AcademicNavigator {
            Id int64 `json:"id"`                // 学术导航 ID
            UserId int64 `json:"user_id"`       // 用户 ID
            Education string `json:"education"` // 学历
            Content string `json:"content"`     // 内容
            Major string `json:"major"`         // 专业
            School string `json:"school"`       // 学校
            WorkExp string `json:"work_exp"`    // 工作经验
            LikeCount int64 `json:"like_count"` // 点赞数
        }
        GetAcademicNavigatorReq {
            UserId int64 `json:"user_id,optional"`       // 用户 ID
            Education string `json:"education,optional"` // 学历
            Content string `json:"content,optional"`     // 内容
            Major string `json:"major,optional"`         // 专业
            School string `json:"school,optional"`       // 学校
            WorkExp string `json:"work_exp,optional"`    // 工作经验
            Page int64 `json:"page"`                     // 页码
            PageSize int64 `json:"page_size"`            // 每页大小
        }
        List {
            Total int64 `json:"total"`               // 总数
            Items []AcademicNavigator `json:"items"` // 学术导航列表
        }
        GetAcademicNavigatorResp {
            Response
            Data *List `json:"data"` // 学术导航列表
        }
        AddAcademicNavigatorReq {
            UserId int64 `json:"user_id"`       // 用户 ID
            Education string `json:"education"` // 学历
            Content string `json:"content"`     // 内容
            Major string `json:"major"`         // 专业
            School string `json:"school"`       // 学校
            WorkExp string `json:"work_exp"`    // 工作经验
        }
        AddAcademicNavigatorResp {
            Response
            Data bool `json:"data"` // 是否添加成功
        }
        DeleteAcademicNavigatorReq {
            Id int64 `path:"id"` // 学术导航 ID
        }
        DeleteAcademicNavigatorResp {
            Response
            Data bool `json:"data"` // 是否删除成功
        }
        HealthResp {
            Response
            Data bool `json:"data"` // 是否健康
        }
        UpdateAcademicNavigatorLikeCountReq {
            UserId int64 `json:"user_id"` // 用户 ID
            Id int64 `path:"id"`          // 学术导航 ID
        }
        UpdateAcademicNavigatorLikeCountResp {
            Response
            Data bool `json:"data"` // 是否更新成功
        }
        CancelLikeAcademicNavigatorReq {
            UserId int64 `json:"user_id"` // 用户 ID
            Id int64 `path:"id"`          // 学术导航 ID
        }
        CancelLikeAcademicNavigatorResp {
            Response
            Data bool `json:"data"` // 是否取消点赞成功
        }
        PostAcademicNavigatorLikeReq {
            UserId int64 `json:"user_id"` // 用户 ID
            Id int64 `path:"id"`          // 学术导航 ID
        }
        PostAcademicNavigatorLikeResp {
            Response
            Data bool `json:"data"` // 是否点赞成功
        }
    )

    @server(
        prefix: /api/academic_navigator
    )
    service AcademicNavigator {
        @doc(
            summary: "健康检查"
        )
        @handler Health
        get /health returns (HealthResp)

        @doc(
            summary: "获取学术导航"
        )
        @handler GetAcademicNavigator
        get /get (GetAcademicNavigatorReq) returns (GetAcademicNavigatorResp)
    }

    @server(
        prefix: /api/academic_navigator
        jwt: Auth
    )
    service AcademicNavigator {
        @doc(
            summary: "新增学术导航"
        )
        @handler AddAcademicNavigator
        post /create (AddAcademicNavigatorReq) returns (AddAcademicNavigatorResp)

        @doc(
            summary: "删除学术导航"
        )
        @handler DeleteAcademicNavigator
        delete /delete/:id (DeleteAcademicNavigatorReq) returns (DeleteAcademicNavigatorResp)

        @doc(
            summary: "点赞学术导航"
        )
        @handler PostAcademicNavigatorLike
        post /like/:id (PostAcademicNavigatorLikeReq) returns (PostAcademicNavigatorLikeResp)

        @doc(
            summary: "取消点赞学术导航"
        )
        @handler CancelLikeAcademicNavigator
        delete /dislike/:id (CancelLikeAcademicNavigatorReq) returns (CancelLikeAcademicNavigatorResp)
    }

