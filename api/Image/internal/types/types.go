// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type DeleteRequest struct {
	ImageId int64 `json:"image_id"` // 图片ID
	UserId  int64 `json:"user_id"`  // 用户ID（用于权限验证）
}

type DeleteResponse struct {
	Response
	Data bool `json:"success"` // 删除是否成功
}

type GetRequest struct {
	ImageId int64 `json:"image_id"` // 图片ID
}

type GetResponse struct {
	Response
	Data ImageInfo `json:"data"` // 图片详情
}

type HealthResponse struct {
	Response
}

type ImageInfo struct {
	ImageId      int64  `json:"image_id"`      // 图片ID
	BucketName   string `json:"bucket_name"`   // MinIO bucket名称
	ObjectName   string `json:"object_name"`   // MinIO中的对象名称
	Url          string `json:"url"`           // 完整的访问URL
	ThumbnailUrl string `json:"thumbnail_url"` // 缩略图URL
	ContentType  string `json:"content_type"`  // 文件MIME类型
	Size         int64  `json:"size"`          // 文件大小(bytes)
	Width        int32  `json:"width"`         // 图片宽度(px)
	Height       int32  `json:"height"`        // 图片高度(px)
	UploadIp     string `json:"upload_ip"`     // 上传者IP
	UserId       int64  `json:"user_id"`       // 上传者ID
	Status       string `json:"status"`        // 状态
	CreatedAt    string `json:"created_at"`    // 创建时间
}

type List struct {
	List  []ImageInfo `json:"images"` // 图片列表
	Total int64       `json:"total"`  // 总数量
}

type ListByUserRequest struct {
	UserId   int64 `json:"user_id"`   // 用户ID
	Page     int32 `json:"page"`      // 页码
	PageSize int32 `json:"page_size"` // 每页数量
}

type ListByUserResponse struct {
	Response
	Data List `json:"data"`
}

type Response struct {
	Code    int32  `json:"code"`    // 状态码
	Message string `json:"message"` // 提示信息
}

type UploadRequest struct {
	File        []byte `json:"file"`         // 图片文件数据
	Filename    string `json:"filename"`     // 文件名
	UserId      int64  `json:"user_id"`      // 用户ID
	ContentType string `json:"content_type"` // 文件类型
}

type UploadResponse struct {
	Response
	Data ImageInfo `json:"data"` // 上传的图片信息
}
