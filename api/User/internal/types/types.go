// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type AuthenticateUserRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type AuthenticateUserResponse struct {
	Response
	Data string `json:"data"`
}

type ChangePasswordRequest struct {
	OldPassword string `form:"oldPassword"`
	NewPassword string `form:"newPassword"`
}

type ChangePasswordResponse struct {
	Response
	Data bool `json:"data"`
}

type CreateUserRequest struct {
	Username     string `form:"username"`
	PasswordHash string `form:"passwordHash"`
}

type CreateUserResponse struct {
	Response
	Data int64 `json:"data"`
}

type DeleteUserRequest struct {
	UserId int64 `path:"userId"`
}

type DeleteUserResponse struct {
	Response
	Data bool `json:"data"`
}

type GetUserInfoRequest struct {
	UserId int64 `path:"userId"`
}

type GetUserInfoResponse struct {
	Response
	Data *UserInfo `json:"data"`
}

type HealthCheckResponse struct {
	Response
	Data bool `json:"data"`
}

type ImageInfo struct {
	ImageId      int64  `json:"image_id"`      // 图片ID
	BucketName   string `json:"bucket_name"`   // MinIO bucket名称
	ObjectName   string `json:"object_name"`   // MinIO中的对象名称
	Url          string `json:"url"`           // 完整的访问URL
	ThumbnailUrl string `json:"thumbnail_url"` // 缩略图URL
	ContentType  string `json:"content_type"`  // 文件MIME类型
	Size         int64  `json:"size"`          // 文件大小(bytes)
	Width        int32  `json:"width"`         // 图片宽度(px)
	Height       int32  `json:"height"`        // 图片高度(px)
	UploadIp     string `json:"upload_ip"`     // 上传者IP
	UserId       int64  `json:"user_id"`       // 上传者ID
	Status       string `json:"status"`        // 状态
	CreatedAt    string `json:"created_at"`    // 创建时间
}

type ResetPasswordRequest struct {
	Email       string `form:"email"`
	NewPassword string `form:"newPassword"`
}

type ResetPasswordResponse struct {
	Response
	Data bool `json:"data"`
}

type Response struct {
	Code    int32  `json:"code"`    // 状态码
	Message string `json:"message"` // 提示信息
}

type UpdateUserInfoRequest struct {
	Email    string `form:"email"`
	Nickname string `form:"nickname"`
}

type UpdateUserInfoResponse struct {
	Response
	Data bool `json:"data"`
}

type UploadUserAvatarResponse struct {
	Response
	Data *ImageInfo `json:"data"`
}

type UserInfo struct {
	UserId    int64  `json:"user_id"`
	Username  string `json:"username"`
	Avatar    string `json:"avatar"`
	Email     string `json:"email"`
	Nickname  string `json:"nickname"`
	IsAdmin   bool   `json:"is_admin"`
	Status    bool   `json:"status"`
	CreatedAt int64  `json:"created_at"`
	UpdatedAt int64  `json:"updated_at"`
}
