openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: 用户服务 API 文档

servers:
  - url: http://localhost:8888
    description: 本地开发环境

components:
  schemas:
    Response:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: 状态码
        message:
          type: string
          description: 提示信息
    
    UserInfo:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          description: 用户ID
        username:
          type: string
          description: 用户名
        avatar:
          type: string
          description: 头像地址
        email:
          type: string
          description: 邮箱
        nickname:
          type: string
          description: 昵称
        is_admin:
          type: boolean
          description: 是否为管理员
        status:
          type: boolean
          description: 用户状态
        created_at:
          type: integer
          format: int64
          description: 创建时间
        updated_at:
          type: integer
          format: int64
          description: 更新时间

    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
          description: 用户名
        passwordHash:
          type: string
          description: 密码哈希
      required:
        - username
        - passwordHash

    CreateUserResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            data:
              type: integer
              format: int64
              description: 创建的用户ID

    GetUserInfoResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UserInfo'

    UpdateUserInfoRequest:
      type: object
      properties:
        email:
          type: string
          description: 邮箱
        nickname:
          type: string
          description: 昵称

    UpdateUserInfoResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            data:
              type: boolean
              description: 更新结果

    AuthenticateUserRequest:
      type: object
      properties:
        username:
          type: string
          description: 用户名
        password:
          type: string
          description: 密码
      required:
        - username
        - password

    AuthenticateUserResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            data:
              type: string
              description: JWT token

    ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
          description: 旧密码
        newPassword:
          type: string
          description: 新密码
      required:
        - oldPassword
        - newPassword

    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          description: 邮箱
        newPassword:
          type: string
          description: 新密码
      required:
        - email
        - newPassword

    HealthCheckResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            data:
              type: boolean
              description: 健康状态

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Authorization header using the Bearer scheme

paths:
  /user/register:
    post:
      tags:
        - 用户管理
      summary: 创建用户
      description: 注册新用户
      operationId: createUser
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: 成功创建用户
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误

  /user/info/{userId}:
    get:
      tags:
        - 用户管理
      summary: 获取用户信息
      description: 根据用户ID获取用户详细信息
      operationId: getUserInfo
      parameters:
        - name: userId
          in: path
          required: true
          description: 用户ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功获取用户信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserInfoResponse'
        '404':
          description: 用户不存在
        '500':
          description: 服务器内部错误

  /user/login:
    post:
      tags:
        - 用户管理
      summary: 用户登录
      description: 用户登录并获取JWT令牌
      operationId: authenticateUser
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticateUserRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateUserResponse'
        '401':
          description: 认证失败
        '500':
          description: 服务器内部错误

  /user/update:
    put:
      tags:
        - 用户管理
      summary: 更新用户信息
      description: 更新当前登录用户的信息
      operationId: updateUserInfo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUserInfoRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserInfoResponse'
        '401':
          description: 未授权
        '500':
          description: 服务器内部错误

  /user/health:
    get:
      tags:
        - 系统
      summary: 健康检查
      description: 检查服务是否正常运行
      operationId: healthCheck
      responses:
        '200':
          description: 服务正常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        '500':
          description: 服务异常

  /user/reset-password:
    post:
      tags:
        - 用户管理
      summary: 重置密码
      description: 通过邮箱重置用户密码
      operationId: resetPassword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: 密码重置成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: 未授权
        '404':
          description: 用户不存在
        '500':
          description: 服务器内部错误

  /user/change-password:
    post:
      tags:
        - 用户管理
      summary: 修改密码
      description: 修改当前登录用户的密码
      operationId: changePassword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: 密码修改成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: 未授权或原密码错误
        '500':
          description: 服务器内部错误

  /user/delete/{userId}:
    delete:
      tags:
        - 用户管理
      summary: 删除用户
      description: 删除指定用户
      operationId: deleteUser
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: 要删除的用户ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: 未授权
        '404':
          description: 用户不存在
        '500':
          description: 服务器内部错误

tags:
  - name: 用户管理
    description: 用户相关接口
  - name: 系统
    description: 系统相关接口