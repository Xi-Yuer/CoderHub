// goctl api go -api user.api -dir ../
syntax = "v1"

info (
	title:   "User API"
	version: "1.0.0"
)

type (
	Response {
		Code    int32  `json:"code"` // 状态码
		Message string `json:"message"` // 提示信息
	}
	CreateUserRequest {
		Username string `form:"username"`
		PasswordHash string `form:"passwordHash"`
	}
	CreateUserResponse {
		Response
		Data int64 `json:"data"`
	}
	GetUserInfoRequest {
		UserId int64 `json:"user_id" path:"userId"`
	}
	UserInfo {
		UserId    int64  `json:"user_id"`
		Username  string `json:"username"`
		Avatar    string `json:"avatar"`
		Email     string `json:"email"`
		Nickname  string `json:"nickname"`
		IsAdmin   string `json:"is_admin"`
		Status    bool   `json:"status"`
		CreatedAt int64  `json:"created_at"`
		UpdatedAt int64  `json:"updated_at"`
	}
	GetUserInfoResponse {
		Response
		Data UserInfo `json:"data"`
	}
	UpdateUserInfoRequest {
		UserId int64 `form:"userId"`
		Username string `form:"username"`
		Avatar string `form:"avatar"`
		Email string `form:"email"`
		Nickname string `form:"nickname"`
		IsAdmin string `form:"isAdmin"`
		Status bool `form:"status"`
	}
	UpdateUserInfoResponse {
		Response
		Data bool `json:"data"`
	}
	AuthenticateUserRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}
	AuthenticateUserResponse {
		Response
		Data string `json:"data"`
	}
	ChangePasswordRequest {
		UserId int64 `form:"userId"`
		OldPassword string `form:"oldPassword"`
		NewPassword string `form:"newPassword"`
	}
	ChangePasswordResponse {
		Response
		Data bool `json:"data"`
	}
	ResetPasswordRequest {
		Email string `form:"email"`
		NewPassword string `form:"newPassword"`
	}
	ResetPasswordResponse {
		Response
		Data bool `json:"data"`
	}
	DeleteUserRequest {
		UserId int64 `path:"userId"`
	}
	DeleteUserResponse {
		Response
		Data bool `json:"data"`
	}
)

service user-api {
	// 创建用户
	@handler CreateUser
	post /api/user/register (CreateUserRequest) returns (CreateUserResponse)

	// 获取用户信息
	@handler GetUserInfo
		get /api/user/info/:userId (GetUserInfoRequest) returns (GetUserInfoResponse)

	// 用户登录
	@handler AuthenticateUser
		post /api/user/login (AuthenticateUserRequest) returns (AuthenticateUserResponse)
}

@server (
	jwt: Auth
)
service user-api {
	// 更新用户信息
	@handler UpdateUserInfo
	put /api/user/update (UpdateUserInfoRequest) returns (UpdateUserInfoResponse)

	// 重置密码
	@handler ResetPassword
	post /api/user/reset-password (ResetPasswordRequest) returns (ResetPasswordResponse)

	// 修改密码
	@handler ChangePassword
	post /api/user/change-password (ChangePasswordRequest) returns (ChangePasswordResponse)

	// 删除用户
	@handler DeleteUser
		delete /api/user/delete/:userId (DeleteUserRequest) returns (DeleteUserResponse)
}

