# 文章表同步配置
input {
  jdbc {
    # MySQL JDBC驱动程序的路径
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
    # JDBC驱动类名
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    # MySQL数据库连接字符串
    jdbc_connection_string => "jdbc:mysql://mysql:3306/coderhub"
    # 数据库用户名
    jdbc_user => "root"
    # 数据库密码
    jdbc_password => "2214380963Wx!!"
    
    # SQL查询语句，只选择需要的字段，包括删除时间
    statement => "SELECT id, title, content, summary, tags, deleted_at
                 FROM articles 
                 WHERE updated_at > :sql_last_value OR deleted_at IS NOT NULL"
    
    # 用于追踪增量同步的字段名
    tracking_column => "updated_at"
    # 追踪字段的类型（timestamp类型）
    tracking_column_type => "timestamp"
    # 使用字段值进行追踪，而不是系统时间
    use_column_value => true
    
    # 同步计划:每5分钟执行一次
    schedule => "*/5 * * * * *"
    # 数据类型标识，用于区分不同表的数据
    type => "articles"
  }
}

# 用户表同步配置
input {
  jdbc {
    # MySQL JDBC驱动程序的路径
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
    # JDBC驱动类名
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    # MySQL数据库连接字符串
    jdbc_connection_string => "jdbc:mysql://mysql:3306/coderhub"
    # 数据库用户名
    jdbc_user => "root"
    # 数据库密码
    jdbc_password => "2214380963Wx!!"
    
    # SQL查询语句，选择用户表的指定字段，包括删除时间
    statement => "SELECT id, user_name, email, deleted_at 
                 FROM users 
                 WHERE updated_at > :sql_last_value OR deleted_at IS NOT NULL"
    
    # 用于追踪增量同步的字段名
    tracking_column => "updated_at"
    # 追踪字段的类型（timestamp类型）
    tracking_column_type => "timestamp"
    # 使用字段值进行追踪
    use_column_value => true
    
    # 同步计划：每5分钟执行一次
    schedule => "*/5 * * * * *"
    # 数据类型标识，用于区分不同表的数据
    type => "users"
  }
}

# 学术导航表同步配置
input {
  jdbc {
    # MySQL JDBC驱动程序的路径
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
    # JDBC驱动类名
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    # MySQL数据库连接字符串
    jdbc_connection_string => "jdbc:mysql://mysql:3306/coderhub"
    # 数据库用户名
    jdbc_user => "root"
    # 数据库密码
    jdbc_password => "2214380963Wx!!"
    
    # SQL查询语句，只选择需要的字段，包括删除时间
    statement => "SELECT id, user_id, content, education, major, school, work_exp, deleted_at
                 FROM academic_navigators 
                 WHERE updated_at > :sql_last_value OR deleted_at IS NOT NULL"
    
    # 用于追踪增量同步的字段名
    tracking_column => "updated_at"
    # 追踪字段的类型（timestamp类型）
    tracking_column_type => "timestamp"
    # 使用字段值进行追踪，而不是系统时间
    use_column_value => true
    
    # 同步计划:每5分钟执行一次
    schedule => "*/5 * * * * *"
    # 数据类型标识，用于区分不同表的数据
    type => "academic_navigators"
  }
}

# 数据过滤配置
filter {
  mutate {
    # 移除Logstash自动添加的字段
    remove_field => ["@version", "@timestamp"]
  }
}

# 输出配置
output {
  # 处理文章数据
  if [type] == "articles" {
    # 删除逻辑：如果 `deleted_at` 字段不为空，则从 Elasticsearch 删除文档
    if [deleted_at] {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "2214380963Wx!!"
        index => "articles"
        document_id => "%{id}"
        action => "delete"  # 明确指定删除操作
      }
    } else {
      # 索引逻辑：其他情况下插入或更新文档
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "2214380963Wx!!"
        index => "articles"
        document_id => "%{id}"
        action => "index"  # 明确指定索引操作
      }
    }
  }

  # 处理用户数据
  if [type] == "users" {
    # 删除逻辑：如果 `deleted_at` 字段不为空，则从 Elasticsearch 删除文档
    if [deleted_at] {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "2214380963Wx!!"
        index => "users"
        document_id => "%{id}"
        action => "delete"  # 明确指定删除操作
      }
    } else {
      # 索引逻辑：其他情况下插入或更新文档
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "2214380963Wx!!"
        index => "users"
        document_id => "%{id}"
        action => "index"  # 明确指定索引操作
      }
    }
  }
  # 处理学术导航数据
  if [type] == "academic_navigators" {
    # 删除逻辑：如果 `deleted_at` 字段不为空，则从 Elasticsearch 删除文档
    if [deleted_at] {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "2214380963Wx!!"
        index => "academic_navigators"
        document_id => "%{id}"
        action => "delete"  # 明确指定删除操作
      }
    } else {
      # 索引逻辑：其他情况下插入或更新文档
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "2214380963Wx!!"
        index => "academic_navigators"
        document_id => "%{id}"
        action => "index"  # 明确指定索引操作
      }
    }
  }
}

