// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: imageRelation.proto

package server

import (
	"context"

	"coderhub/rpc/ImageRelation/imageRelation"
	"coderhub/rpc/ImageRelation/internal/logic"
	"coderhub/rpc/ImageRelation/internal/svc"
)

type ImageRelationServiceServer struct {
	svcCtx *svc.ServiceContext
	imageRelation.UnimplementedImageRelationServiceServer
}

func NewImageRelationServiceServer(svcCtx *svc.ServiceContext) *ImageRelationServiceServer {
	return &ImageRelationServiceServer{
		svcCtx: svcCtx,
	}
}

// 创建图片关系
func (s *ImageRelationServiceServer) CreateRelation(ctx context.Context, in *imageRelation.CreateRelationRequest) (*imageRelation.CreateRelationResponse, error) {
	l := logic.NewCreateRelationLogic(ctx, s.svcCtx)
	return l.CreateRelation(in)
}

// 批量创建图片关系
func (s *ImageRelationServiceServer) BatchCreateRelation(ctx context.Context, in *imageRelation.BatchCreateRelationRequest) (*imageRelation.BatchCreateRelationResponse, error) {
	l := logic.NewBatchCreateRelationLogic(ctx, s.svcCtx)
	return l.BatchCreateRelation(in)
}

// 删除图片关系
func (s *ImageRelationServiceServer) DeleteRelation(ctx context.Context, in *imageRelation.DeleteRelationRequest) (*imageRelation.DeleteRelationResponse, error) {
	l := logic.NewDeleteRelationLogic(ctx, s.svcCtx)
	return l.DeleteRelation(in)
}

// 获取实体关联的图片列表
func (s *ImageRelationServiceServer) GetImagesByEntity(ctx context.Context, in *imageRelation.GetImagesByEntityRequest) (*imageRelation.GetImagesByEntityResponse, error) {
	l := logic.NewGetImagesByEntityLogic(ctx, s.svcCtx)
	return l.GetImagesByEntity(in)
}

// 获取图片关联的实体列表
func (s *ImageRelationServiceServer) GetEntitiesByImage(ctx context.Context, in *imageRelation.GetEntitiesByImageRequest) (*imageRelation.GetEntitiesByImageResponse, error) {
	l := logic.NewGetEntitiesByImageLogic(ctx, s.svcCtx)
	return l.GetEntitiesByImage(in)
}
